---
layout: post
title: "面向对象基本概念（一）"
date: 2012-12-14 17:20
comments: true
categories: java
---
　　在深入某种编程语言或建模语言前必须先熟悉<strong>面向对象</strong>（object-oriented，ＯＯ）思维过程。
<!-- more -->
>　　对象（object）可以定义为同时包含数据和行为的一个实体。这里的“同时包含”正是ＯＯ程序设计和其他程序设计方法的重要区别。

　　在ＯＯ设计中，属性和行为都包含在一个对象中，而在过程式设计中（或者说结构化设计）中，属性和行为是分开的。

>　　数据隐藏（data hiding）：在ＯＯ术语中，数据表示为属性，行为表示为方法，限制对某些属性和方法的访问称为数据隐藏。

>　　封装（encapsulation）：通过把属性和方法合并到一个实体中，就能控制对对象中数据的访问。

　　一般情况下，对象不应处理其他对象的内部数据。通常更好的做法是构建完成特定任务的小对象，而不是建立完成很多任务的大型对象。

　　过程式程序设计通常将系统的数据与处理这些数据的操作相分离。

　　ＯＯ程序设计最根本的优点是：数据和处理这些数据的操作（代码）都封装在对象中。

>　　存储在一个对象中的数据表示对象的状态。在ＯＯ程序设计术语中，该数据称为属性（attribute）。

>　　对象的行为（behavior）就是对象能够做什么。在ＯＯ程序设计术语中，这些行为包含在方法（method）中，要通过发送消息来调用方法。

　　要记住，使用对象有很多优点，其中最有意思（最强大）的一点就是数据是包的一部分——它不与代码分离。

　　获取方法和设置方法的概念支持数据隐藏的概念。因为其他对象不能直接处理另一个对象内部的数据，所以获取方法和设置方法提供了对对象的数据的一种控制访问。

　　只是给出方法的接口，而没有展示具体实现。用户只需要一下信息就能知道如何有效地使用这些方法。

- 方法名

- 传入方法的参数

- 方法的返回类型

###类是什么？

　　现在可以把类认为是一种<strong>模板</strong>，由这个模板建立对象。创建一个对象时，我们称对象被实例化。从概念层次来讲，可以认为对象完全是独立的，有其自己的属性和方法。

　　简单来讲，类是对象的一个<strong>蓝图</strong>。实例化一个对象时，就是使用一个类作为构建这个对象的基础。在ＯＯ软件中，应该先有类。如果没有类，对象就无法实例化。

　　每个对象都有其自己的属性和行为。类定义用这个类创建的所有对象拥有的属性和行为。类是一些代码。有类实例化得到的对象可以单独分布，也可以作为库的一部分。

